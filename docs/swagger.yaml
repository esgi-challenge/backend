basePath: /api
definitions:
  github_com_esgi-challenge_backend_internal_models.Auth:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  github_com_esgi-challenge_backend_internal_models.AuthLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  github_com_esgi-challenge_backend_internal_models.AuthRegister:
    properties:
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        type: string
    required:
    - email
    - firstname
    - lastname
    - password
    type: object
  github_com_esgi-challenge_backend_internal_models.Campus:
    properties:
      code:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      schoolId:
        type: integer
      updatedAt:
        type: string
    type: object
  github_com_esgi-challenge_backend_internal_models.CampusCreate:
    properties:
      code:
        type: string
      location:
        type: string
      name:
        type: string
      schoolId:
        type: integer
    required:
    - location
    - name
    - schoolId
    type: object
  github_com_esgi-challenge_backend_internal_models.CampusUpdate:
    properties:
      code:
        type: string
      location:
        type: string
      name:
        type: string
      schoolId:
        type: integer
    required:
    - location
    - name
    - schoolId
    type: object
  github_com_esgi-challenge_backend_internal_models.Class:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      pathId:
        type: integer
      students:
        items:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.User'
        type: array
      updatedAt:
        type: string
    type: object
  github_com_esgi-challenge_backend_internal_models.ClassAdd:
    properties:
      userId:
        description: Do like this to allow zero value
        type: integer
    required:
    - userId
    type: object
  github_com_esgi-challenge_backend_internal_models.ClassCreate:
    properties:
      name:
        type: string
      pathId:
        type: integer
    required:
    - name
    - pathId
    type: object
  github_com_esgi-challenge_backend_internal_models.ClassUpdate:
    properties:
      name:
        type: string
      pathId:
        type: integer
    required:
    - name
    - pathId
    type: object
  github_com_esgi-challenge_backend_internal_models.Course:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      pathId:
        type: integer
      teacherId:
        type: integer
      updatedAt:
        type: string
    type: object
  github_com_esgi-challenge_backend_internal_models.CourseCreate:
    properties:
      description:
        type: string
      name:
        type: string
      pathId:
        type: integer
      teacherId:
        type: integer
    required:
    - description
    - name
    - pathId
    - teacherId
    type: object
  github_com_esgi-challenge_backend_internal_models.CourseUpdate:
    properties:
      description:
        type: string
      pathId:
        type: integer
      teacherId:
        type: integer
    required:
    - description
    - pathId
    - teacherId
    type: object
  github_com_esgi-challenge_backend_internal_models.Example:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  github_com_esgi-challenge_backend_internal_models.ExampleCreate:
    properties:
      description:
        type: string
      title:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - description
    - title
    type: object
  github_com_esgi-challenge_backend_internal_models.ExampleUpdate:
    properties:
      description:
        type: string
      title:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - description
    - title
    type: object
  github_com_esgi-challenge_backend_internal_models.Path:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      schoolId:
        type: integer
      updatedAt:
        type: string
    type: object
  github_com_esgi-challenge_backend_internal_models.PathCreate:
    properties:
      description:
        type: string
      name:
        type: string
      schoolId:
        type: integer
    required:
    - name
    - schoolId
    type: object
  github_com_esgi-challenge_backend_internal_models.PathUpdate:
    properties:
      description:
        type: string
      name:
        type: string
      schoolId:
        type: integer
    type: object
  github_com_esgi-challenge_backend_internal_models.Schedule:
    properties:
      campusId:
        type: integer
      classId:
        type: integer
      courseId:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      time:
        type: string
      updatedAt:
        type: string
    type: object
  github_com_esgi-challenge_backend_internal_models.ScheduleCreate:
    properties:
      campusId:
        type: integer
      classId:
        type: integer
      courseId:
        type: integer
      time:
        type: string
    required:
    - campusId
    - classId
    - courseId
    - time
    type: object
  github_com_esgi-challenge_backend_internal_models.ScheduleUpdate:
    properties:
      campusId:
        type: integer
      classId:
        type: integer
      courseId:
        type: integer
      time:
        type: string
    required:
    - campusId
    - classId
    - courseId
    - time
    type: object
  github_com_esgi-challenge_backend_internal_models.School:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  github_com_esgi-challenge_backend_internal_models.SchoolCreate:
    properties:
      name:
        maxLength: 64
        minLength: 1
        type: string
    required:
    - name
    type: object
  github_com_esgi-challenge_backend_internal_models.SchoolInvite:
    properties:
      email:
        maxLength: 128
        minLength: 1
        type: string
      firstname:
        maxLength: 128
        minLength: 1
        type: string
      lastname:
        maxLength: 128
        minLength: 1
        type: string
      schoolId:
        type: integer
      type:
        type: string
    required:
    - email
    - firstname
    - lastname
    - type
    type: object
  github_com_esgi-challenge_backend_internal_models.User:
    properties:
      classRefer:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      firstname:
        type: string
      id:
        type: integer
      invitationCode:
        type: string
      lastname:
        type: string
      password:
        type: string
      passwordResetCode:
        type: string
      schoolId:
        type: integer
      updatedAt:
        type: string
      userKind:
        type: integer
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
info:
  contact: {}
  description: Backend written in Go for the S2 ESGI Challenge
  title: Backend
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Reset User Password
      parameters:
      - description: Register Infos
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.AuthRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Auth'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Reset User Password
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Log to the api
      parameters:
      - description: Login Credentials
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.AuthLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Auth'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Log to the api
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register to the api
      parameters:
      - description: Register Infos
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.AuthRegister'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Auth'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Register to the api
      tags:
      - Auth
  /campuss:
    get:
      description: Get all campus
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Campus'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get all campus
      tags:
      - Campus
    post:
      consumes:
      - application/json
      description: create new campus
      parameters:
      - description: Campus infos
        in: body
        name: campus
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.CampusCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Campus'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new campus
      tags:
      - Campus
  /campuss/{id}:
    delete:
      description: Delete campus by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
      summary: Delete campus by id
      tags:
      - Campus
    get:
      description: Get campus by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Campus'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get campus by id
      tags:
      - Campus
    put:
      consumes:
      - application/json
      description: Update campus
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Campus infos
        in: body
        name: campus
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.CampusUpdate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Campus'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update campus
      tags:
      - Campus
  /classs:
    get:
      description: Get all class
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Class'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get all class
      tags:
      - Class
    post:
      consumes:
      - application/json
      description: create new class
      parameters:
      - description: Class infos
        in: body
        name: class
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.ClassCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Class'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new class
      tags:
      - Class
  /classs/{id}:
    delete:
      description: Delete class by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
      summary: Delete class by id
      tags:
      - Class
    get:
      description: Get class by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Class'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get class by id
      tags:
      - Class
    put:
      consumes:
      - application/json
      description: Update class
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Class infos
        in: body
        name: class
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.ClassUpdate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Class'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update class
      tags:
      - Class
  /classs/{id}/add:
    put:
      consumes:
      - application/json
      description: Add student to class
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Student infos
        in: body
        name: class
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.ClassAdd'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Class'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Add student to class
      tags:
      - Class
  /courses:
    get:
      description: Get all course
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Course'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get all course
      tags:
      - Course
    post:
      consumes:
      - application/json
      description: create new course
      parameters:
      - description: Course infos
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.CourseCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Course'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new course
      tags:
      - Course
  /courses/{id}:
    delete:
      description: Delete course by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
      summary: Delete course by id
      tags:
      - Course
    get:
      description: Get course by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Course'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get course by id
      tags:
      - Course
    put:
      consumes:
      - application/json
      description: Update course
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Course infos
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.CourseUpdate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Course'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update course
      tags:
      - Course
  /examples:
    get:
      description: Get all example
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Example'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get all example
      tags:
      - Example
    post:
      consumes:
      - application/json
      description: create new example
      parameters:
      - description: Example infos
        in: body
        name: example
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.ExampleCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Example'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new example
      tags:
      - Example
  /examples/{id}:
    delete:
      description: Delete example by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
      summary: Delete example by id
      tags:
      - Example
    get:
      description: Get example by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Example'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get example by id
      tags:
      - Example
    put:
      consumes:
      - application/json
      description: Update example
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Example infos
        in: body
        name: example
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.ExampleUpdate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Example'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update example
      tags:
      - Example
  /healthz:
    get:
      description: Check if API is up
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Check API health
  /paths:
    get:
      description: Get all path
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Path'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get all path
      tags:
      - Path
    post:
      consumes:
      - application/json
      description: create new path
      parameters:
      - description: Path infos
        in: body
        name: path
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.PathCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Path'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new path
      tags:
      - Path
  /paths/{id}:
    delete:
      description: Delete path by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
      summary: Delete path by id
      tags:
      - Path
    get:
      description: Get path by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Path'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get path by id
      tags:
      - Path
    put:
      consumes:
      - application/json
      description: Update path
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Path infos
        in: body
        name: path
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.PathUpdate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Path'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update path
      tags:
      - Path
  /schedules:
    get:
      description: Get all schedule
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Schedule'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get all schedule
      tags:
      - Schedule
    post:
      consumes:
      - application/json
      description: create new schedule
      parameters:
      - description: Schedule infos
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.ScheduleCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Schedule'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new schedule
      tags:
      - Schedule
  /schedules/{id}:
    delete:
      description: Delete schedule by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
      summary: Delete schedule by id
      tags:
      - Schedule
    get:
      description: Get schedule by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Schedule'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get schedule by id
      tags:
      - Schedule
    put:
      consumes:
      - application/json
      description: Update schedule
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Schedule infos
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.ScheduleUpdate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.Schedule'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update schedule
      tags:
      - Schedule
  /schools:
    get:
      description: Get all school
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.School'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get all school
      tags:
      - School
    post:
      consumes:
      - application/json
      description: create new school
      parameters:
      - description: School infos
        in: body
        name: school
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.SchoolCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.School'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new school
      tags:
      - School
  /schools/{id}:
    delete:
      description: Delete school by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
      summary: Delete school by id
      tags:
      - School
    get:
      description: Get school by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.School'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get school by id
      tags:
      - School
  /schools/{id}/invite:
    post:
      consumes:
      - application/json
      description: Invite a student to the school
      parameters:
      - description: School infos
        in: body
        name: school
        required: true
        schema:
          $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.SchoolInvite'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.SchoolInvite'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Invite a student to the school
      tags:
      - School
  /users:
    get:
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_esgi-challenge_backend_internal_models.User'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get all users
      tags:
      - User
  /users/reset-link:
    post:
      description: Get all users
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get all users
      tags:
      - User
swagger: "2.0"
